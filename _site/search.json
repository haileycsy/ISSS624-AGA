[
  {
    "objectID": "In-class_Ex/ice2/In-class_Ex02.html",
    "href": "In-class_Ex/ice2/In-class_Ex02.html",
    "title": "In-class Ex 2",
    "section": "",
    "text": "Geospatial Analysis using sfdep"
  },
  {
    "objectID": "In-class_Ex/ice2/In-class_Ex02.html#joining-the-dataframes",
    "href": "In-class_Ex/ice2/In-class_Ex02.html#joining-the-dataframes",
    "title": "In-class Ex 2",
    "section": "2.1 Joining the dataframes",
    "text": "2.1 Joining the dataframes\nSpatial features are added to the attribute dataframe as geometry column:\n\nhunan_GDPPC<- left_join(hunan, \n                         GDPPC, \n                         by = \"County\")\n\nglimpse(hunan_GDPPC)\n\nRows: 1,496\nColumns: 10\n$ NAME_2     <chr> \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       <int> 21098, 21098, 21098, 21098, 21098, 21098, 21098, 21098, 210…\n$ NAME_3     <chr> \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anx…\n$ ENGTYPE_3  <chr> \"County\", \"County\", \"County\", \"County\", \"County\", \"County\",…\n$ Shape_Leng <dbl> 1.869074, 1.869074, 1.869074, 1.869074, 1.869074, 1.869074,…\n$ Shape_Area <dbl> 0.1005619, 0.1005619, 0.1005619, 0.1005619, 0.1005619, 0.10…\n$ County     <chr> \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anxiang\", \"Anx…\n$ Year       <dbl> 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,…\n$ GDPPC      <dbl> 8184.00, 10995.00, 12670.00, 14128.00, 16763.00, 19817.00, …\n$ geometry   <POLYGON [°]> POLYGON ((112.0625 29.75523..., POLYGON ((112.0625 …"
  },
  {
    "objectID": "Take-home_Ex/the1/Take-home_ex1.html",
    "href": "Take-home_Ex/the1/Take-home_ex1.html",
    "title": "Take-home Ex 1",
    "section": "",
    "text": "Spatio-temporal Patterns of Public Bus Ridership"
  },
  {
    "objectID": "Take-home_Ex/the1/Take-home_ex1.html#aspatial-data",
    "href": "Take-home_Ex/the1/Take-home_ex1.html#aspatial-data",
    "title": "Take-home Ex 1",
    "section": "3.1 Aspatial Data",
    "text": "3.1 Aspatial Data\nA dataset from LTA Datamall, Passenger Volume by Origin Destination Bus Stops from August to October 2023 is used to compute bus traffic. As these were downloaded as separate .csv files, they are imported and combined into a single dataframe.\n\nImporting csv filesVariable DescriptionSummary Statistics\n\n\n\n# Load each csv file into R separately\nbus08 <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nbus09 <- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\nbus10 <- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n# Combine all rows into single dataframe\nbusod <- rbind(bus08, bus09, bus10)\n\nstr(busod)\n\nspc_tbl_ [17,118,005 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR_MONTH         : chr [1:17118005] \"2023-08\" \"2023-08\" \"2023-08\" \"2023-08\" ...\n $ DAY_TYPE           : chr [1:17118005] \"WEEKDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" ...\n $ TIME_PER_HOUR      : num [1:17118005] 16 16 14 14 17 17 17 17 7 17 ...\n $ PT_TYPE            : chr [1:17118005] \"BUS\" \"BUS\" \"BUS\" \"BUS\" ...\n $ ORIGIN_PT_CODE     : chr [1:17118005] \"04168\" \"04168\" \"80119\" \"80119\" ...\n $ DESTINATION_PT_CODE: chr [1:17118005] \"10051\" \"10051\" \"90079\" \"90079\" ...\n $ TOTAL_TRIPS        : num [1:17118005] 7 2 3 10 5 4 3 22 3 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR_MONTH = col_character(),\n  ..   DAY_TYPE = col_character(),\n  ..   TIME_PER_HOUR = col_double(),\n  ..   PT_TYPE = col_character(),\n  ..   ORIGIN_PT_CODE = col_character(),\n  ..   DESTINATION_PT_CODE = col_character(),\n  ..   TOTAL_TRIPS = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\n\nbusod is a tibble dataframe consisting of the following variables:\n\nYEAR_MONTH: Month of data collection in YYYY-MM format\nDAY_TYPE: Category of Day\nTIME_PER_HOUR: Extracted hour of day\nPT_TYPE: Public transport type\nORIGIN_PT_CODE: ID of Trip Origin Bus Stop\nDESTINATION_PT_CODE: ID of Trip Destination Bus Stop\nTOTAL_TRIPS: Sum of trips made per origin-Destination\n\n\n\ncode block\nhead(busod,10) %>%\n  kbl() %>%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    YEAR_MONTH \n    DAY_TYPE \n    TIME_PER_HOUR \n    PT_TYPE \n    ORIGIN_PT_CODE \n    DESTINATION_PT_CODE \n    TOTAL_TRIPS \n  \n \n\n  \n    2023-08 \n    WEEKDAY \n    16 \n    BUS \n    04168 \n    10051 \n    7 \n  \n  \n    2023-08 \n    WEEKENDS/HOLIDAY \n    16 \n    BUS \n    04168 \n    10051 \n    2 \n  \n  \n    2023-08 \n    WEEKENDS/HOLIDAY \n    14 \n    BUS \n    80119 \n    90079 \n    3 \n  \n  \n    2023-08 \n    WEEKDAY \n    14 \n    BUS \n    80119 \n    90079 \n    10 \n  \n  \n    2023-08 \n    WEEKENDS/HOLIDAY \n    17 \n    BUS \n    44069 \n    17229 \n    5 \n  \n  \n    2023-08 \n    WEEKDAY \n    17 \n    BUS \n    44069 \n    17229 \n    4 \n  \n  \n    2023-08 \n    WEEKENDS/HOLIDAY \n    17 \n    BUS \n    20281 \n    20141 \n    3 \n  \n  \n    2023-08 \n    WEEKDAY \n    17 \n    BUS \n    20281 \n    20141 \n    22 \n  \n  \n    2023-08 \n    WEEKDAY \n    7 \n    BUS \n    19051 \n    10017 \n    3 \n  \n  \n    2023-08 \n    WEEKENDS/HOLIDAY \n    17 \n    BUS \n    11169 \n    04219 \n    3 \n  \n\n\n\n\n\n\n\ndescribe(busod)\n\nSummary Statistics reveal that:\n\nThere are 17,118,005 bus trip combinations recorded over 3 months\nDAY_TYPE is split into only 2 categories, ‘WEEKDAY’ and ‘WEEKENDS/PUBLIC HOLIDAY’\nData is collected for 24 hours, starting from 0 Hrs to 23 Hrs in TIME_PER_HOUR\nThere are 5075 distinct origin bus stops, and 5079 distinct destination stops\nThe average number of trips per route is 20.46, with the highest value recorded being a whopping 36,668 – this points to the presence of possible outliers or anomalies, that may be cause for further analysis"
  },
  {
    "objectID": "Take-home_Ex/the1/Take-home_ex1.html#geospatial-data",
    "href": "Take-home_Ex/the1/Take-home_ex1.html#geospatial-data",
    "title": "Take-home Ex 1",
    "section": "3.2 Geospatial Data",
    "text": "3.2 Geospatial Data\nThere are two sources of Geospatial data used in this study:\n\nBus Stop Location from LTA DataMall, providing information about all the bus stops currently being serviced by buses including the bus stop code (identifier) and location coordinates\nhexagon, a hexagon layer for mapping\n\n\nImporting Geospatial FilesCheck EPSG Code and CRSAssigning the right EPSG Code based on CRSJoining both geospatial feature frames\n\n\nBoth Simple feature layers are based on SVY21 coordinate reference system (CRS).\n\nbusstop <- st_read(\n    dsn = \"data/geospatial\",\n    layer = \"BusStop\"\n  ) \n\nReading layer `BusStop' from data source \n  `C:\\haileycsy\\ISSS624-AGA\\Take-home_Ex\\the1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThis geospatial layer shows the point location of busstops in Singapore:\n\nqtm(busstop)\n\n\n\n\n\nhexagon <- st_read(\n    dsn = \"data/geospatial\",\n    layer = \"hexagon\"\n  )\n\nReading layer `hexagon' from data source \n  `C:\\haileycsy\\ISSS624-AGA\\Take-home_Ex\\the1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\nThis geospatial layer splits Singapore into hexagon polygon features:\n\nqtm(hexagon)\n\n\n\n\n\n\nThe st_crs() function is used to check for ESPG Code and Coordinate System of both geospatial files. In order to perform geoprocessing using different geospatial data sources, both need to be projected using similar coordinate systems and be assigned the correct EPSG code based on CRS.\n\nst_crs(busstop)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nst_crs(hexagon)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nAccording to epsg.io, Singapore’s coordinate system is SVY21 with EPSG 3414\n\nbusstop is projected in SVY21 with EPSG 9001 – this will require re-assignment of EPSG code to 3414\nhexagon is projected in SVY21 with EPSG 3414\n\n\n\n\nThis is done using the st_set_crs() function\n\n# Assign EPSG code\nbusstop <- st_set_crs(\n   busstop, \n   3414\n  ) %>%\n# rename bus stop origin for easy join to main dataframe\n  mutate(\n    ORIGIN_PT_CODE = as.factor(BUS_STOP_N)\n  ) %>%\n  select(\n    ORIGIN_PT_CODE, \n    LOC_DESC,\n    geometry\n  )\n\n# Confirm EPSG code\nst_crs(busstop)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nbusstop and hexagon are now both projected in the same CRS and Assigned the correct EPSG codes.\n\n\nIn order to visualise each bus stop as a hexagon on the map, we perform a left join on the geospatial dataframes using st_join\n\nbusstop_sf <- st_join(hexagon, busstop)\n\n\nplot(busstop_sf[\"ORIGIN_PT_CODE\"])"
  },
  {
    "objectID": "Take-home_Ex/the1/Take-home_ex1.html#aspatial-data-preparation",
    "href": "Take-home_Ex/the1/Take-home_ex1.html#aspatial-data-preparation",
    "title": "Take-home Ex 1",
    "section": "4.1 Aspatial Data Preparation",
    "text": "4.1 Aspatial Data Preparation\nThe following steps are taken to extract each period for analysis as a separate dataframe from busod:\n\nChanging Data TypeExtracting Period Dataframes\n\n\nORIGIN_PT_CODE and DESTINATION_PT_CODE are in character format. These represent the busstop locations, and are thus transformed into factors (categorical data type) for further analysis\n\nbusod <- busod %>%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n\nbusod_agg <- busod %>%\n  # Categorize trips under period based on day and timeframe\n  mutate(period = ifelse(DAY_TYPE == \"WEEKDAY\" & \n                         TIME_PER_HOUR >= 6 & TIME_PER_HOUR <= 9, \n                         \"Weekday morning peak\",\n                    ifelse(DAY_TYPE == \"WEEKDAY\" & \n                           TIME_PER_HOUR >= 17 & TIME_PER_HOUR <= 20,\n                           \"Weekday evening peak\",\n                      ifelse(DAY_TYPE == \"WEEKENDS/HOLIDAY\" &\n                             TIME_PER_HOUR >= 11 & TIME_PER_HOUR <= 14,\n                              \"Weekend/PH morning peak\",\n                        ifelse(DAY_TYPE == \"WEEKENDS/HOLIDAY\" & \n                              TIME_PER_HOUR >= 16 & TIME_PER_HOUR <= 19,\n                               \"Weekend/PH evening peak\",\n                    \"Others\"))))\n  ) %>%\n  # Only retain needed periods for analysis\n  filter(\n    period != \"Others\"\n  ) %>%\n # compute number of trips per origin busstop per month for each period\n  group_by(\n    YEAR_MONTH,\n    period,\n    ORIGIN_PT_CODE\n  ) %>%\n  summarise(\n    num_trips = sum(TOTAL_TRIPS)\n  ) %>%\n  ungroup()\n\n\n\nUsing the filter() and summarise() functions, the number of passenger trips by origin busstop at different day/peak periods are saved in separate dataframes.\nA left_join is then performed to the geospatial simple features dataframe busstop.\nWeekday morning peak\nweekday_morning <- busod %>% filter( DAY_TYPE == “WEEKDAY” ) %>% filter( TIME_PER_HOUR >= 6 & TIME_PER_HOUR <= 9 ) %>% group_by( YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE, TIME_PER_HOUR ) %>% summarise( num_trips = sum(TOTAL_TRIPS) ) %>% ungroup()\n\n5 Join with geospatial dataframe\nweekday_morning_sf <- left_join( busstop_sf, weekday_morning, by = “ORIGIN_PT_CODE” ) %>% # change all column names to lowercase rename_with( tolower, everything() )\ntm_shape(weekday_morning_sf) + tm_fill( “num_trips”, style = “quantile”, palette = “Purples” ) + tm_borders( lwd = .1,\nalpha = .8)\nWeekday afternoon peak\nweekday_aft <- busod %>% filter( DAY_TYPE == “WEEKDAY” ) %>% filter( TIME_PER_HOUR >= 17 & TIME_PER_HOUR <= 20 ) %>% group_by( YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE, LOC_DESC, TIME_PER_HOUR, geometry ) %>% summarise( num_trips = sum(TOTAL_TRIPS) ) %>% # change all column names to lowercase rename_with( tolower, everything() ) %>% ungroup()\nWeekend/holiday morning peak\nweekend_ph_morning <- busod %>% filter( DAY_TYPE != “WEEKDAY” ) %>% filter( TIME_PER_HOUR >= 11 & TIME_PER_HOUR <= 14 ) %>% group_by( YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE, TIME_PER_HOUR ) %>% summarise( num_trips = sum(TOTAL_TRIPS) ) %>% # change all column names to lowercase rename_with( tolower, everything() ) %>% ungroup()\nWeekend/holiday evening peak\nweekend_ph_evening <- busod %>% filter( DAY_TYPE != “WEEKDAY” ) %>% filter( TIME_PER_HOUR >= 16 & TIME_PER_HOUR <= 19 ) %>% group_by( YEAR_MONTH, DAY_TYPE, ORIGIN_PT_CODE, TIME_PER_HOUR ) %>% summarise( num_trips = sum(TOTAL_TRIPS) ) %>% # change all column names to lowercase rename_with( tolower, everything() ) %>% ungroup()"
  },
  {
    "objectID": "Take-home_Ex/the1/Take-home_ex1.html#geospatial-data-preparation",
    "href": "Take-home_Ex/the1/Take-home_ex1.html#geospatial-data-preparation",
    "title": "Take-home Ex 1",
    "section": "5.1 Geospatial Data Preparation",
    "text": "5.1 Geospatial Data Preparation\n\n\n\n\nflowchart TD\nA[busstop] -->|geometry| B[hexagon] -->|traffic| C(weekday morning)\nB -->|traffic| D(weekday afternoon)\nB -->|traffic| E(weekend/PH morning)\nB -->|traffic| F(weekend/PH evening)\n\n\n\n\n\n\n\n\nbusstop is a simple feature dataframe with bus stop number and geometry (longitude and latitude) attributes, which locates each bus stop as a point:"
  },
  {
    "objectID": "In-class_Ex/ice1/MPSZ-2019.html",
    "href": "In-class_Ex/ice1/MPSZ-2019.html",
    "title": "haileycsy",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex/the1/data/geospatial/hexagon.html",
    "href": "Take-home_Ex/the1/data/geospatial/hexagon.html",
    "title": "haileycsy",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs 0 0     false"
  },
  {
    "objectID": "In-class_Ex/ice2/In-class_Ex02.html#confirm-if-the-new-dataframe-is-a-spacetime-cube-object",
    "href": "In-class_Ex/ice2/In-class_Ex02.html#confirm-if-the-new-dataframe-is-a-spacetime-cube-object",
    "title": "In-class Ex 2",
    "section": "6.1 Confirm if the new dataframe is a spacetime cube object",
    "text": "6.1 Confirm if the new dataframe is a spacetime cube object\n\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE"
  }
]